====================Day-12-Assignement-Session-1========================
1. create a HashSet class by add 10 numbers by using for loop and extra add some more objects and print the all the values.
import java.util.HashSet;

public class HashSetExx {
    public static void main(String[] args) {
        HashSet hs = new HashSet<>();
        hs.add("juned");
        hs.add(false);
        hs.add(new String("Roman"));
        hs.add(new Float(234.6f));
        for(int i = 0; i < 10; i++){
            hs.add(i);
        }
        for(Object o: hs){
            System.out.println(o);
        }
    }
}


2. create a LinkedHashSet class by add 10 numbers by using for loop and extra add some more objects and print the all the values.
import java.util.LinkedHashSet;
public class LinkedHashSetExx {
    public static void main(String[] args) {
        LinkedHashSet lhs = new LinkedHashSet();
        lhs.add(120);
        lhs.add(new Integer(120));
        lhs.add("Juned");
        lhs.add(false);
        lhs.add(true);
        lhs.add(34.5f);
        lhs.add('c');
        for(int i = 0; i < 10; i++)
        {
            lhs.add(i);
        }
        for(Object o: lhs){
            System.out.println(o);
        }
    }
}


3. By using Iterator class iterate the HashSet class Elements.
import java.util.Iterator;
import java.util.HashSet;
public class HashSetIterator {
    public static void main(String[] args) {
        HashSet hs = new HashSet();
        hs.add("juned");
        hs.add(false);
        hs.add(new String("Roman"));
        hs.add(new Float(234.6f));
        hs.add(true);
        hs.add('c');
        Iterator itr = hs.iterator();
        while(itr.hasNext()){
            System.out.println(itr.next());
        }
    }
}


4. By using Iterator class iterate the LinkedHashSet Elements.
import java.util.Iterator;
import java.util.LinkedHashSet;
public class LinkedHashSetExx {
    public static void main(String[] args) {
        LinkedHashSet lhs = new LinkedHashSet();
        lhs.add(120);
        lhs.add(new Integer(120));
        lhs.add("Juned");
        lhs.add(false);
        lhs.add(true);
        lhs.add(34.5f);
        lhs.add('c');
	Iterator itr = lhs.iterator();
        while(itr.hasNext()){
            System.out.println(itr.next());
        }
    }
}


5. By using generics cretae hashset class apply some methods,addall(),remove().
import java.util.HashSet;

public class HashSetGenericExx {
    public static void main(String[] args) {
        HashSet<String> hs = new HashSet();
        hs.add("Juned");
        hs.add("lomne");
        hs.add("mike");
        hs.add("sple");
        hs.add("maple");
        HashSet hs1 = new HashSet<String>();
        hs.add("zukar");
        hs.add("yame");
        hs.add("tome");
        hs.addAll(hs1);
        System.out.println(hs);
        hs.remove("yame");
        System.out.println(hs);
    }
}


========================================Session-2========================================
1. create a class and print the elements by using keySet.
import java.util.Iterator;
import java.util.Set;
import java.util.TreeMap;

public class KeySetEx {
    public static void main(String[] args) {
        TreeMap<Integer, String> tm = new TreeMap();
        tm.put(1, "Juned");
        tm.put(2, "jgdf");
        tm.put(3, "weter");
        tm.put(4, "qadsd");
        tm.put(5, "sddff");
        Set<Integer> tmm = tm.keySet();
        Iterator itr = tmm.iterator();
        while(itr.hasNext()){
            System.out.println(itr.next());
        }
    }
}


2. Create a class print all the elements with EntrySet.
import java.util.Iterator;
import java.util.Set;
import java.util.TreeMap;
import java.util.Map.Entry;

public class KeyValueIteratorTreeSet {
    public static void main(String[] args) {
        TreeMap<Integer, String> tm = new TreeMap();
        tm.put(1, "Juned");
        tm.put(2, "jgdf");
        tm.put(3, "weter");
        tm.put(4, "qadsd");
        tm.put(5, "sddff");
        Set<Entry<Integer, String>> res= tm.entrySet();
        Iterator itr =  res.iterator();
        while(itr.hasNext()){
            System.out.println(itr.next());
        }
    }
}

3. Create a class with HashMap use to print the values.
import java.util.HashMap;
public class HashMapExx {
    public static void main(String[] args) {
        HashMap<Integer, String> hs = new HashMap();
        hs.put(101, "Juned");
        hs.put(123, "mone");
        hs.put(89, "linae");
        hs.put(12, "rasoee");
        hs.put(5, "tone");
        System.out.println(hs);
    }
}


4. By Using LinkedHashMap add elements and print the values.
import java.util.LinkedHashMap;

public class LinkedHashMapExx {
    public static void main(String[] args) {
        LinkedHashMap<Integer, String> hs = new LinkedHashMap();
        hs.put(101, "Juned");
        hs.put(123, "mone");
        hs.put(89, "linae");
        hs.put(12, "rasoee");
        hs.put(5, "tone");
        System.out.println(hs);
    }
}
